#!/bin/bash

set -e  # Exit on any error

ROOT_DIR="$(pwd)"
DOCS_SOURCE_DIR="$ROOT_DIR/docs/source"
EXAMPLES_DIR="$DOCS_SOURCE_DIR/examples"
STATIC_MEDIA_DIR="$DOCS_SOURCE_DIR/_static/media"
TMP_DIR="$ROOT_DIR/sync"
BUILD_DIR="$ROOT_DIR/docs/build"

# === Prepare temp folder and remove old copies ===
rm -rf "$EXAMPLES_DIR" "$STATIC_MEDIA_DIR" "$TMP_DIR"
mkdir -p "$TMP_DIR"

# === Download ZIP of amago/crr_k branch ===
curl -L https://github.com/UT-Austin-RPL/amago/archive/refs/heads/crr_k.zip -o "$TMP_DIR/crr_k.zip"

# === Unzip and extract ===
unzip -q "$TMP_DIR/crr_k.zip" -d "$TMP_DIR"
mv "$TMP_DIR/amago-crr_k/examples" "$EXAMPLES_DIR"
mkdir -p "$DOCS_SOURCE_DIR/_static"
mv "$TMP_DIR/amago-crr_k/media" "$STATIC_MEDIA_DIR"

# === Copy and transform tutorial.md ===
TUTORIAL_SRC="$TMP_DIR/amago-crr_k/tutorial.md"
TUTORIAL_DST="$DOCS_SOURCE_DIR/tutorial.md"

{
    found_title=false
    while IFS= read -r line; do
        if ! $found_title && [[ "$line" =~ ^# ]]; then
            echo "# Tutorial"
            found_title=true
        else
            echo "$line"
        fi
    done < "$TUTORIAL_SRC"
} > "$TUTORIAL_DST"

# === Copy and transform README.md into index.md ===
README_SRC="$TMP_DIR/amago-crr_k/README.md"
INDEX_DST="$DOCS_SOURCE_DIR/index.md"

{
    found_title=false
    while IFS= read -r line; do
        if ! $found_title && [[ "$line" =~ ^# ]]; then
            echo "# Home"
            found_title=true
        else
            echo "$line"
        fi
    done < "$README_SRC"

    echo ""
    echo '```{toctree}'
    echo ':maxdepth: 2'
    echo ''
    echo 'Home <self>'
    echo 'tutorial'
    echo 'modules'
    echo '```'
} > "$INDEX_DST"

# === Build Sphinx docs ===
cd "$ROOT_DIR/docs"
make clean
make html

# === Copy media into final HTML output ===
cd "$BUILD_DIR/html"
mkdir -p media
cp -r "$STATIC_MEDIA_DIR"/* media/